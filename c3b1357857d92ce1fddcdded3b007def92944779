{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aac37f11_fd78bdfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 343
      },
      "writtenOn": "2021-01-18T19:13:45Z",
      "side": 1,
      "message": "...and this cannot be done via patches.txt? we really, really need this in our vendor? ðŸ¤”",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc830071_3e71124b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1416
      },
      "writtenOn": "2021-01-19T05:22:10Z",
      "side": 1,
      "message": "Probably better would be allowing maintainer to set it via TARGET_KERNEL_CLANG_PATH variable, but will need some adjustments for AICP\u0027s CLANG_CUSTOM code here\n\nWho knows what new Clang variants are about to pop out in future ðŸ¤ª",
      "parentUuid": "aac37f11_fd78bdfc",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d73cc98b_1f66dfc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-01-19T08:02:37Z",
      "side": 1,
      "message": "Don\u0027t think these lines will harm your clang-custom or any other clang things... Ran a build for enchilada with clang-custom and I don\u0027t have any negative impacts. Even no need to clean ccache.\nWhile we have similar implementation for well known \"clang-custom\", why not for this ? Please explain :)",
      "parentUuid": "fc830071_3e71124b",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e12b280_87b30fbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 343
      },
      "writtenOn": "2021-01-19T08:28:19Z",
      "side": 1,
      "message": "My point was just that maybe the kernel.mk should get the possibility to set either clang AOSP (as it is only an upstreamed CLang) and a separate variant for building with another clang like \"Proton\", which would be the custom variant for me.\nThis way making it more \"generic\" to use another CLang and toolchain without mentioning something like \"Proton\".\nSo, the way George thought about the implementation is one way to do it. Your current commit is just targetting Proton and nothing else. ðŸ˜•",
      "parentUuid": "d73cc98b_1f66dfc5",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9cc4853_92e4e738",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-01-19T09:48:07Z",
      "side": 1,
      "message": "Just didn\u0027t wanted to break current behaviour and to add an ability to choose these specific toolchains. I\u0027m open for every suggestion as always. so go on George..",
      "parentUuid": "7e12b280_87b30fbc",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c52d055_b3d07d62",
        "filename": "build/tasks/kernel.mk",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1375
      },
      "writtenOn": "2021-01-18T12:06:25Z",
      "side": 1,
      "message": "so you gona add a new repo for this?",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc7d29f6_8295c188",
        "filename": "build/tasks/kernel.mk",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-01-19T08:02:37Z",
      "side": 1,
      "message": "Actually I wanted to pick this clang repo via dependencies instead of adding to main manifest.",
      "parentUuid": "5c52d055_b3d07d62",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01f82fa5_e0b94434",
        "filename": "build/tasks/kernel.mk",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 343
      },
      "writtenOn": "2021-01-19T08:28:19Z",
      "side": 1,
      "message": "\u003e Actually I wanted to pick this clang repo via dependencies instead of adding to main manifest.\n\nThen adding the roomservice \"clone-depth\" is a good way to do it (at least for clang).",
      "parentUuid": "cc7d29f6_8295c188",
      "revId": "c3b1357857d92ce1fddcdded3b007def92944779",
      "serverId": "9f904cbb-a964-4fab-a7dc-5cfc4d5c238b"
    }
  ]
}